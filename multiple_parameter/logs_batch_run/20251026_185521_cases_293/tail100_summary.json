{
  "CU": [
    "[LIBCONFIG] file /home/sionna/evan/CursorAutomation/cursor_gen_conf/multiple_parameter/output/cases_293/cu_case_293.conf - line 91: syntax error",
    "[CONFIG] /home/sionna/evan/openairinterface5g/common/config/config_load_configmodule.c 376 config module \"libconfig\" couldn't be loaded",
    "[CONFIG] config_get, section log_config skipped, config module not properly initialized",
    "[LOG] init aborted, configuration couldn't be performed",
    "[CONFIG] config_get, section (null) skipped, config module not properly initialized",
    "[CONFIG] /home/sionna/evan/openairinterface5g/common/config/config_userapi.c 68 nfapi has no processed integer availablle",
    "[CONFIG] config_get, section (null) skipped, config module not properly initialized",
    "Getting configuration failed",
    "CMDLINE: \"/home/sionna/evan/openairinterface5g/cmake_targets/ran_build/build/nr-softmodem\" \"--rfsim\" \"--sa\" \"-O\" \"/home/sionna/evan/CursorAutomation/cursor_gen_conf/multiple_parameter/output/cases_293/cu_case_293.conf\" ",
    "[LIBCONFIG] Path for include directive set to: /home/sionna/evan/CursorAutomation/cursor_gen_conf/multiple_parameter/output/cases_293",
    "",
    "[CONFIG] function config_libconfig_init returned -1",
    "[CONFIG] debug flags: 0x00300000",
    "log init done",
    "Reading in command-line options"
  ],
  "DU": [
    "[ENB_APP]   nfapi (0) running mode: MONOLITHIC",
    "\u001b[0m[GNB_APP]   Getting GNBSParams",
    "\u001b[0m[OPT]   OPT disabled",
    "\u001b[0m[HW]   Version: Branch: HEAD Abrev. Hash: 7026763286 Date: Tue Jul 2 12:38:22 2024 +0000",
    "\u001b[0m[NR_PHY]   RC.gNB = 0x642af33dba90",
    "\u001b[0m[NR_PHY]   PRB blacklist ",
    "\u001b[0m[NR_PHY]   Copying 0 blacklisted PRB to L1 context",
    "\u001b[0m[PHY]   L1_RX_THREAD_CORE -1 (15)",
    "\u001b[0m[PHY]   TX_AMP = 519 (-36 dBFS)",
    "\u001b[0m[PHY]   l1_north_init_gNB() RC.nb_nr_L1_inst:1",
    "\u001b[0m[PHY]   Installing callbacks for IF_Module - UL_indication",
    "\u001b[0m[MAC]   Allocating shared L1/L2 interface structure for instance 0 @ 0x642af33e3b60",
    "\u001b[0m[PHY]   l1_north_init_gNB() RC.gNB[0] installing callbacks",
    "\u001b[0m[PHY]   create_gNB_tasks() Task ready initialize structures",
    "\u001b[0m[PHY]   No prs_config configuration found..!!",
    "\u001b[0m[GNB_APP]   pdsch_AntennaPorts N1 2 N2 1 XP 2 pusch_AntennaPorts 4",
    "\u001b[0m[GNB_APP]   minTXRXTIME 6",
    "\u001b[0m[GNB_APP]   SIB1 TDA 15",
    "\u001b[0m[GNB_APP]   CSI-RS 0, SRS 0, 256 QAM force off, delta_MCS off, maxMIMO_Layers 1",
    "\u001b[0m[GNB_APP]   sr_ProhibitTimer 0, sr_TransMax 64, sr_ProhibitTimer_v1700 0, t300 400, t301 400, t310 2000, n310 10, t311 3000, n311 1, t319 400",
    "\u001b[0m[RRC]   Read in ServingCellConfigCommon (PhysCellId 0, ABSFREQSSB 1282560, DLBand 78, ABSFREQPOINTA 640008, DLBW 106,RACH_TargetReceivedPower -96",
    "\u001b[0m[NR_MAC]   NR band duplex spacing is 0 KHz (nr_bandtable[40].band = 78)",
    "\u001b[0m[RRC]   absoluteFrequencySSB 1282560 corresponds to 13238400000 Hz",
    "\u001b[0m",
    "Assertion (gscn >= start_gscn && gscn <= end_gscn) failed!",
    "In check_ssb_raster() /home/sionna/evan/openairinterface5g/common/utils/nr/nr_common.c:289",
    "GSCN 14609 corresponding to SSB frequency 13238400000 does not belong to GSCN range for band 78",
    "",
    "Exiting execution",
    "CMDLINE: \"/home/sionna/evan/openairinterface5g/cmake_targets/ran_build/build/nr-softmodem\" \"--rfsim\" \"--sa\" \"-O\" \"/home/sionna/evan/CursorAutomation/cursor_gen_conf/multiple_parameter/output/cases_293/du_case_293.conf\" ",
    "[LIBCONFIG] Path for include directive set to: /home/sionna/evan/CursorAutomation/cursor_gen_conf/multiple_parameter/output/cases_293",
    "[CONFIG] function config_libconfig_init returned 0",
    "[CONFIG] config module libconfig loaded",
    "[CONFIG] debug flags: 0x00000000",
    "log init done",
    "Reading in command-line options",
    "[CONFIG] parallel_conf is set to 2",
    "[CONFIG] worker_conf is set to 1",
    "Configuration: nb_rrc_inst 1, nb_nr_L1_inst 1, nb_ru 1",
    "configuring for RAU/RRU",
    "Initializing northbound interface for L1",
    "/home/sionna/evan/openairinterface5g/common/utils/nr/nr_common.c:289 check_ssb_raster() Exiting OAI softmodem: _Assert_Exit_"
  ],
  "UE": [
    "\u001b[0m\u001b[93m[PHY]   samples_per_subframe 61440/per second 61440000, wCP 57344",
    "\u001b[0m[PHY]   Initializing UE vars for gNB TXant 1, UE RXant 1",
    "\u001b[0m[PHY]   prs_config configuration NOT found..!! Skipped configuring UE for the PRS reception",
    "\u001b[0m[PHY]   Doing symbol rotation calculation for TX/RX, f0 3619200000.000000 Hz, Nsymb 28",
    "\u001b[0m[PHY]   Doing symbol rotation calculation for TX/RX, f0 3619200000.000000 Hz, Nsymb 28",
    "\u001b[0m[PHY]   UE 0 Setting N_TA_offset to 800 samples (factor 2.000000, UL Freq 3619200000, N_RB 106, mu 1)",
    "\u001b[0m[PHY]   HW: Configuring card 0, sample_rate 61440000.000000, tx/rx num_channels 1/1, duplex_mode TDD",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_freq 3619200000 Hz, rx_freq 3619200000 Hz, tune_offset 0",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_gain 0, rx_gain 110",
    "\u001b[0m[PHY]   HW: Configuring card 1, sample_rate 61440000.000000, tx/rx num_channels 1/1, duplex_mode TDD",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_freq 3619200000 Hz, rx_freq 3619200000 Hz, tune_offset 0",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_gain 0, rx_gain 110",
    "\u001b[0m[PHY]   HW: Configuring card 2, sample_rate 61440000.000000, tx/rx num_channels 1/1, duplex_mode TDD",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_freq 3619200000 Hz, rx_freq 3619200000 Hz, tune_offset 0",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_gain 0, rx_gain 110",
    "\u001b[0m[PHY]   HW: Configuring card 3, sample_rate 61440000.000000, tx/rx num_channels 1/1, duplex_mode TDD",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_freq 3619200000 Hz, rx_freq 3619200000 Hz, tune_offset 0",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_gain 0, rx_gain 110",
    "\u001b[0m[PHY]   HW: Configuring card 4, sample_rate 61440000.000000, tx/rx num_channels 1/1, duplex_mode TDD",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_freq 3619200000 Hz, rx_freq 3619200000 Hz, tune_offset 0",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_gain 0, rx_gain 110",
    "\u001b[0m[PHY]   HW: Configuring card 5, sample_rate 61440000.000000, tx/rx num_channels 1/1, duplex_mode TDD",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_freq 3619200000 Hz, rx_freq 3619200000 Hz, tune_offset 0",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_gain 0, rx_gain 110",
    "\u001b[0m[PHY]   HW: Configuring card 6, sample_rate 61440000.000000, tx/rx num_channels 1/1, duplex_mode TDD",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_freq 3619200000 Hz, rx_freq 3619200000 Hz, tune_offset 0",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_gain 0, rx_gain 110",
    "\u001b[0m[PHY]   HW: Configuring card 7, sample_rate 61440000.000000, tx/rx num_channels 1/1, duplex_mode TDD",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_freq 3619200000 Hz, rx_freq 3619200000 Hz, tune_offset 0",
    "\u001b[0m[PHY]   HW: Configuring channel 0 (rf_chain 0): setting tx_gain 0, rx_gain 110",
    "\u001b[0m[PHY]   Intializing UE Threads for instance 0 (0x5e6329c59330,0x796bafea3010)...",
    "\u001b[0m[UTIL]   threadCreate() for UEthread: creating thread with affinity ffffffff, priority 97",
    "\u001b[0m[UTIL]   threadCreate() for L1_UE_stats: creating thread with affinity ffffffff, priority 1",
    "\u001b[0m[NR_RRC]   create TASK_RRC_NRUE ",
    "\u001b[0m[UTIL]   threadCreate() for TASK_RRC_NRUE: creating thread with affinity ffffffff, priority 50",
    "\u001b[0m[HW]   Running as client: will connect to a rfsimulator server side",
    "\u001b[0m[ITTI]   Created Posix thread TASK_RRC_NRUE",
    "\u001b[0m[UTIL]   threadCreate() for TASK_NAS_NRUE: creating thread with affinity ffffffff, priority 50",
    "\u001b[0m[HW]   [RRU] has loaded RFSIMULATOR device.",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[ITTI]   Created Posix thread TASK_NAS_NRUE",
    "\u001b[0m[SIM]   UICC simulation: IMSI=001010000000101, IMEISV=6754567890123413, Ki=fec86ba6eb707ed08905757b1bb44b8f, OPc=C42449363BBAD02B66D16BC975D77CC1, DNN=oai, SST=0x01, SD=0xffffff",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m[HW]   Trying to connect to 127.0.0.1:4043",
    "\u001b[0m[HW]   connect() to 127.0.0.1:4043 failed, errno(111)",
    "\u001b[0m"
  ]
}
